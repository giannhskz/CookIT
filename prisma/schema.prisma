generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?           @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  userincredients UserIncredients[]
  recipe          Recipe[]

  @@map("users")
}

model Recipe {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  useremail            String
  recipeId             Int
  title                String
  readyInMinutes       Int
  servings             Int
  imageURL             String
  ingredients          Ingredients[]
  analyzedInstructions AnalyzedInstructions[]
  user                 User                   @relation(fields: [useremail], references: [email])

  @@map("recipe")
}

type Ingredients {
  original String
}

type AnalyzedInstructions {
  number Int
  step   String
}

model UserIncredients {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  name     String
  quantity Int
  user     User   @relation(fields: [userId], references: [id])

  @@map("userincredients")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}
